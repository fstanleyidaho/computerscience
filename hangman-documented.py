# -*- coding: utf-8 -*-#04_08_hangman_fullimport random# This section initializes the global variables and fills the array WORD# Change or add to the entries in the array to make the game more challenging#words = ['chicken', 'dog', 'cat', 'mouse', 'frog']lives_remaining = 14guessed_letters='' # sets the variable to a null stringguess = ''def play ():	word = pick_a_word() # load a word into the working storage area	# print (word) #remove this line when done debugging	guess = get_guess(word) # go get a guess from the player	if process_guess (guess, word): # check the guess to see if it matches a letter or whole word		print ('You win! Well Done!') # if TRUE then print the greeting                exit	if  lives_remaining == 0: # if FALSE and lives remaining = 0 then print FAILURE		print ('You are hung')		print ('Your word was: '+ word)                exitdef pick_a_word(): # process for getting a word from the array	word_position = random.randint(0, len(words) - 1)	# the next line is for debugging remove when ready to play	# print ('selected word is: ' + words[word_position])	return words[word_position]def get_guess(word): # get input from the keyboard	print_word_with_blanks (word)	print ('Lives Remaining: ' + str(lives_remaining))	guess = input ('  Guess a letter or whole word? ')	return guessdef print_word_with_blanks (word):	display_word = ''	for letter in word:		if guessed_letters.find (letter)>-1:			# letter found			display_word = display_word + letter # build and print the word & letters found		else:			# letter not found			display_word = display_word + '-'	print (display_word)def process_guess (guess, word): # checks the guess to see if it is a good guess	if len(guess)>1:		return whole_word_guess (guess, word) # go to whole word guess to check for TRUE	else:		return single_letter_guess (guess, word) # go to single letter checkdef whole_word_guess (guess, word):	global lives_remaining	if guess == word:		return True	else:		lives_remaining = lives_remaining -1		return Falsedef single_letter_guess (guess, word):	global guessed_letters	global lives_remaining	if word.find (guess) == -1:		# letters guess was incorrect		lives_remaining = lives_remaining - 1	guessed_letters = guessed_letters + guess	if all_letters_guessed (word):		return True	return Falsedef all_letters_guessed (word): # check to see if all of the letters in a word have been found	for letter in word:		if guessed_letters.find(letter) == -1:			return False		return Trueplay()